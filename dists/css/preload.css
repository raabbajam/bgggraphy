#demo-canvas {
  max-width: 100%;
  min-height: 500px; }

#logopp {
  transition: all 0.67s;
  position: fixed;
  top: 12%;
  left: 50%;
  transform: translate(-50%);
  z-index: 11; }
  #logopp #rect3206 {
    fill: none; }
  #logopp text {
    opacity: 0; }
  #logopp.loading #rect3206, #logopp.loading #g3990-2 {
    opacity: 0; }
  #logopp.loaded {
    transform: scale(0.33);
    transform-origin: 0 0;
    top: 0.67em;
    left: 1em; }
    #logopp.loaded path {
      fill: grey;
      stroke: grey; }
    #logopp.loaded #rect3206, #logopp.loaded #g3990-2 {
      opacity: 1; }
    #logopp.loaded :hover text {
      opacity: 1; }

#loader {
  opacity: 0.85;
  background: #000;
  width: 100%;
  height: 100%;
  z-index: 10;
  top: 0;
  left: 0;
  position: fixed;
  transition: all 0.67s ease; }

.pageload-overlay {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  visibility: hidden; }
  .starting .pageload-overlay {
    visibility: visible; }

.pageload-overlay.show {
  visibility: visible; }

.pageload-overlay .overlay {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none; }

.pageload-overlay .overlay path {
  fill: #fff; }

@-webkit-keyframes moveRight {
  to {
    -webkit-transform: rotate(-360deg); } }
@keyframes moveRight {
  to {
    transform: rotate(-360deg); } }
@-webkit-keyframes moveLeft {
  to {
    -webkit-transform: rotate(360deg); } }
@keyframes moveLeft {
  to {
    transform: rotate(360deg); } }
.left.brackets {
  transform-origin: 150px 180px; }

.right.brackets {
  transform-origin: 350px 180px; }

.loading .right.brackets {
  -webkit-animation: moveLeft 1.5s linear infinite normal;
  animation: moveLeft 1.5s linear infinite normal; }

.loading .left.brackets {
  -webkit-animation: moveRight 1.5s linear infinite normal;
  animation: moveRight 1.5s linear infinite normal; }



/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBQUEsWUFBYTtFQUNULFNBQVMsRUFBRSxJQUFJO0VBQ2YsVUFBVSxFQUFFLEtBQUs7O0FBRXJCLE9BQVE7RUFDSixVQUFVLEVBQUUsU0FBUztFQUNyQixRQUFRLEVBQUUsS0FBSztFQUNmLEdBQUcsRUFBRSxHQUFHO0VBQ1IsSUFBSSxFQUFFLEdBQUc7RUFDVCxTQUFTLEVBQUUsZUFBZTtFQUMxQixPQUFPLEVBQUUsRUFBRTtFQUNYLGlCQUFVO0lBQ04sSUFBSSxFQUFFLElBQUk7RUFFZCxZQUFLO0lBQ0QsT0FBTyxFQUFFLENBQUM7RUFHVixtREFBbUI7SUFDZixPQUFPLEVBQUUsQ0FBQztFQUdsQixjQUFTO0lBQ0wsU0FBUyxFQUFFLFdBQVc7SUFDdEIsZ0JBQWdCLEVBQUUsR0FBRztJQUNyQixHQUFHLEVBQUUsTUFBTTtJQUNYLElBQUksRUFBRSxHQUFHO0lBQ1QsbUJBQUs7TUFDRCxJQUFJLEVBQUUsSUFBSTtNQUNWLE1BQU0sRUFBRSxJQUFJO0lBRWhCLGlEQUFtQjtNQUNmLE9BQU8sRUFBRSxDQUFDO0lBR1YsMEJBQUs7TUFDRCxPQUFPLEVBQUUsQ0FBQzs7QUFLMUIsT0FBUTtFQUNKLE9BQU8sRUFBRSxJQUFJO0VBQ2IsVUFBVSxFQUFFLElBQUk7RUFDaEIsS0FBSyxFQUFFLElBQUk7RUFDWCxNQUFNLEVBQUUsSUFBSTtFQUNaLE9BQU8sRUFBRSxFQUFFO0VBQ1gsR0FBRyxFQUFFLENBQUM7RUFDTixJQUFJLEVBQUUsQ0FBQztFQUNQLFFBQVEsRUFBRSxLQUFLO0VBQ2YsVUFBVSxFQUFFLGNBQWM7O0FBRTlCLGlCQUFrQjtFQUNkLFFBQVEsRUFBRSxLQUFLO0VBQ2YsS0FBSyxFQUFFLElBQUk7RUFDWCxNQUFNLEVBQUUsSUFBSTtFQUNaLEdBQUcsRUFBRSxDQUFDO0VBQ04sSUFBSSxFQUFFLENBQUM7RUFDUCxVQUFVLEVBQUUsTUFBTTtFQUNsQiwyQkFBWTtJQUNSLFVBQVUsRUFBRSxPQUFPOztBQUczQixzQkFBdUI7RUFDbkIsVUFBVSxFQUFFLE9BQU87O0FBRXZCLDBCQUEyQjtFQUN2QixRQUFRLEVBQUUsUUFBUTtFQUNsQixHQUFHLEVBQUUsQ0FBQztFQUNOLElBQUksRUFBRSxDQUFDO0VBQ1AsY0FBYyxFQUFFLElBQUk7O0FBRXhCLCtCQUFnQztFQUM1QixJQUFJLEVBQUUsSUFBSTs7QUFFZCw0QkFJQztFQUhHLEVBQUc7SUFDQyxpQkFBaUIsRUFBRSxlQUFlO0FBRzFDLG9CQUlDO0VBSEcsRUFBRztJQUNDLFNBQVMsRUFBRSxlQUFlO0FBR2xDLDJCQUlDO0VBSEcsRUFBRztJQUNDLGlCQUFpQixFQUFFLGNBQWM7QUFHekMsbUJBSUM7RUFIRyxFQUFHO0lBQ0MsU0FBUyxFQUFFLGNBQWM7QUFHakMsY0FBZTtFQUNYLGdCQUFnQixFQUFFLFdBQVc7O0FBRWpDLGVBQWdCO0VBQ1osZ0JBQWdCLEVBQUUsV0FBVzs7QUFFakMsd0JBQXlCO0VBQ3hCLGlCQUFpQixFQUFFLG9DQUFvQztFQUNwRCxTQUFTLEVBQUUsb0NBQW9DOztBQUVuRCx1QkFBd0I7RUFDdkIsaUJBQWlCLEVBQUUscUNBQXFDO0VBQ3JELFNBQVMsRUFBRSxxQ0FBcUMiLCJzb3VyY2VzIjpbInByZWxvYWQuc2NzcyJdLCJuYW1lcyI6W10sImZpbGUiOiJwcmVsb2FkLmNzcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbIiNkZW1vLWNhbnZhcyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDUwMHB4O1xufVxuI2xvZ29wcCB7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNjdzO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDEyJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSk7XG4gICAgei1pbmRleDogMTE7XG4gICAgI3JlY3QzMjA2IHtcbiAgICAgICAgZmlsbDogbm9uZTtcbiAgICB9XG4gICAgdGV4dCB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuICAgICYubG9hZGluZyB7XG4gICAgICAgICNyZWN0MzIwNiwgI2czOTkwLTJ7XG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB9XG4gICAgfVxuICAgICYubG9hZGVkIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjMzKTtcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xuICAgICAgICB0b3A6IDAuNjdlbTtcbiAgICAgICAgbGVmdDogMWVtO1xuICAgICAgICBwYXRoIHtcbiAgICAgICAgICAgIGZpbGw6IGdyZXk7XG4gICAgICAgICAgICBzdHJva2U6IGdyZXk7XG4gICAgICAgIH1cbiAgICAgICAgI3JlY3QzMjA2LCAjZzM5OTAtMntcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIH1cbiAgICAgICAgOmhvdmVyIHtcbiAgICAgICAgICAgIHRleHQge1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4jbG9hZGVyIHtcbiAgICBvcGFjaXR5OiAwLjg1O1xuICAgIGJhY2tncm91bmQ6ICMwMDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC42N3MgZWFzZTtcbn1cbi5wYWdlbG9hZC1vdmVybGF5IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAuc3RhcnRpbmcgJiB7XG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgfVxufVxuLnBhZ2Vsb2FkLW92ZXJsYXkuc2hvdyB7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbn1cbi5wYWdlbG9hZC1vdmVybGF5IC5vdmVybGF5IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG4ucGFnZWxvYWQtb3ZlcmxheSAub3ZlcmxheSBwYXRoIHtcbiAgICBmaWxsOiAjZmZmO1xufVxuQC13ZWJraXQta2V5ZnJhbWVzIG1vdmVSaWdodCB7XG4gICAgdG8ge1xuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC0zNjBkZWcpO1xuICAgIH1cbn1cbkBrZXlmcmFtZXMgbW92ZVJpZ2h0IHtcbiAgICB0byB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0zNjBkZWcpO1xuICAgIH1cbn1cbkAtd2Via2l0LWtleWZyYW1lcyBtb3ZlTGVmdCB7XG4gICAgdG8ge1xuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gICAgfVxufVxuQGtleWZyYW1lcyBtb3ZlTGVmdCB7XG4gICAgdG8ge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICAgIH1cbn1cbi5sZWZ0LmJyYWNrZXRzIHtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAxNTBweCAxODBweDtcbn1cbi5yaWdodC5icmFja2V0cyB7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMzUwcHggMTgwcHg7XG59XG4ubG9hZGluZyAucmlnaHQuYnJhY2tldHMge1xuXHQtd2Via2l0LWFuaW1hdGlvbjogbW92ZUxlZnQgMS41cyBsaW5lYXIgaW5maW5pdGUgbm9ybWFsO1xuICAgIGFuaW1hdGlvbjogbW92ZUxlZnQgMS41cyBsaW5lYXIgaW5maW5pdGUgbm9ybWFsO1xufVxuLmxvYWRpbmcgLmxlZnQuYnJhY2tldHMge1xuXHQtd2Via2l0LWFuaW1hdGlvbjogbW92ZVJpZ2h0IDEuNXMgbGluZWFyIGluZmluaXRlIG5vcm1hbDtcbiAgICBhbmltYXRpb246IG1vdmVSaWdodCAxLjVzIGxpbmVhciBpbmZpbml0ZSBub3JtYWw7XG59XG4iXX0= */